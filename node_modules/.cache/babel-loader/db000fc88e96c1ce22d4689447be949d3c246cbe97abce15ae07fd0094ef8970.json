{"ast":null,"code":"var _s = $RefreshSig$();\n// hooks/usePDFGeneration.js\nimport { useState } from 'react';\nimport PDFService from '../services/pdfService';\nexport const usePDFGeneration = () => {\n  _s();\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [progress, setProgress] = useState('');\n  const [error, setError] = useState('');\n  const generatePDF = async (formData, docType, language = 'turkish') => {\n    try {\n      setIsGenerating(true);\n      setError('');\n      setProgress('PDF üretimi başlatılıyor...');\n\n      // Fallback destekli PDF üretimi\n      const success = await PDFService.generatePDFWithFallback(formData, docType, language);\n      if (success) {\n        setProgress('PDF başarıyla indirildi! (Demo modunda çalıştırılıyor)');\n        setTimeout(() => setProgress(''), 5000);\n        return true;\n      } else {\n        throw new Error('PDF üretimi başarısız oldu');\n      }\n    } catch (error) {\n      const errorMessage = error.message.includes('Tüm sistemler devre dışı') ? 'PDF servisleri şu anda kullanılamıyor. Lütfen daha sonra tekrar deneyin.' : `Hata: ${error.message}`;\n      setError(errorMessage);\n      console.error('PDF generation error:', error);\n      return false;\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const clearMessages = () => {\n    setError('');\n    setProgress('');\n  };\n  return {\n    isGenerating,\n    progress,\n    error,\n    generatePDF,\n    clearMessages\n  };\n};\n_s(usePDFGeneration, \"rbzDlNBbH7N8/swUQA5+eFIh2gs=\");\nexport default usePDFGeneration;","map":{"version":3,"names":["useState","PDFService","usePDFGeneration","_s","isGenerating","setIsGenerating","progress","setProgress","error","setError","generatePDF","formData","docType","language","success","generatePDFWithFallback","setTimeout","Error","errorMessage","message","includes","console","clearMessages"],"sources":["/Users/mehmettfaik/Documents/GitHub/Tuana-Dokuman-Frontend/src/hooks/usePDFGeneration.js"],"sourcesContent":["// hooks/usePDFGeneration.js\nimport { useState } from 'react';\nimport PDFService from '../services/pdfService';\n\nexport const usePDFGeneration = () => {\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [progress, setProgress] = useState('');\n  const [error, setError] = useState('');\n\n  const generatePDF = async (formData, docType, language = 'turkish') => {\n    try {\n      setIsGenerating(true);\n      setError('');\n      setProgress('PDF üretimi başlatılıyor...');\n\n      // Fallback destekli PDF üretimi\n      const success = await PDFService.generatePDFWithFallback(formData, docType, language);\n      \n      if (success) {\n        setProgress('PDF başarıyla indirildi! (Demo modunda çalıştırılıyor)');\n        setTimeout(() => setProgress(''), 5000);\n        return true;\n      } else {\n        throw new Error('PDF üretimi başarısız oldu');\n      }\n\n    } catch (error) {\n      const errorMessage = error.message.includes('Tüm sistemler devre dışı') \n        ? 'PDF servisleri şu anda kullanılamıyor. Lütfen daha sonra tekrar deneyin.'\n        : `Hata: ${error.message}`;\n      \n      setError(errorMessage);\n      console.error('PDF generation error:', error);\n      return false;\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const clearMessages = () => {\n    setError('');\n    setProgress('');\n  };\n\n  return {\n    isGenerating,\n    progress,\n    error,\n    generatePDF,\n    clearMessages\n  };\n};\n\nexport default usePDFGeneration;\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,wBAAwB;AAE/C,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,WAAW,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,OAAO,EAAEC,QAAQ,GAAG,SAAS,KAAK;IACrE,IAAI;MACFR,eAAe,CAAC,IAAI,CAAC;MACrBI,QAAQ,CAAC,EAAE,CAAC;MACZF,WAAW,CAAC,6BAA6B,CAAC;;MAE1C;MACA,MAAMO,OAAO,GAAG,MAAMb,UAAU,CAACc,uBAAuB,CAACJ,QAAQ,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MAErF,IAAIC,OAAO,EAAE;QACXP,WAAW,CAAC,wDAAwD,CAAC;QACrES,UAAU,CAAC,MAAMT,WAAW,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;QACvC,OAAO,IAAI;MACb,CAAC,MAAM;QACL,MAAM,IAAIU,KAAK,CAAC,4BAA4B,CAAC;MAC/C;IAEF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACd,MAAMU,YAAY,GAAGV,KAAK,CAACW,OAAO,CAACC,QAAQ,CAAC,0BAA0B,CAAC,GACnE,0EAA0E,GAC1E,SAASZ,KAAK,CAACW,OAAO,EAAE;MAE5BV,QAAQ,CAACS,YAAY,CAAC;MACtBG,OAAO,CAACb,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,OAAO,KAAK;IACd,CAAC,SAAS;MACRH,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAMiB,aAAa,GAAGA,CAAA,KAAM;IAC1Bb,QAAQ,CAAC,EAAE,CAAC;IACZF,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,OAAO;IACLH,YAAY;IACZE,QAAQ;IACRE,KAAK;IACLE,WAAW;IACXY;EACF,CAAC;AACH,CAAC;AAACnB,EAAA,CA/CWD,gBAAgB;AAiD7B,eAAeA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}