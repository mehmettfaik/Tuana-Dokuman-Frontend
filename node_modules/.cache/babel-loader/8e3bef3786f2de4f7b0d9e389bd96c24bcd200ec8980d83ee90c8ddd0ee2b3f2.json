{"ast":null,"code":"// hooks/usePDFGeneration.js\nimport{useState}from'react';import PDFService from'../services/pdfService';export const usePDFGeneration=()=>{const[isGenerating,setIsGenerating]=useState(false);const[progress,setProgress]=useState('');const[error,setError]=useState('');const generatePDF=async function(formData,docType){let language=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'turkish';try{setIsGenerating(true);setError('');setProgress('PDF üretimi başlatılıyor...');// Production PDF üretimi\nconst success=await PDFService.generatePDFWithFallback(formData,docType,language);if(success){setProgress('PDF başarıyla indirildi!');setTimeout(()=>setProgress(''),3000);return true;}else{throw new Error('PDF üretimi başarısız oldu');}}catch(error){setError(error.message);console.error('PDF generation error:',error);return false;}finally{setIsGenerating(false);}};const clearMessages=()=>{setError('');setProgress('');};return{isGenerating,progress,error,generatePDF,clearMessages};};export default usePDFGeneration;","map":{"version":3,"names":["useState","PDFService","usePDFGeneration","isGenerating","setIsGenerating","progress","setProgress","error","setError","generatePDF","formData","docType","language","arguments","length","undefined","success","generatePDFWithFallback","setTimeout","Error","message","console","clearMessages"],"sources":["/Users/mehmettfaik/Documents/GitHub/Tuana-Dokuman-Frontend/src/hooks/usePDFGeneration.js"],"sourcesContent":["// hooks/usePDFGeneration.js\nimport { useState } from 'react';\nimport PDFService from '../services/pdfService';\n\nexport const usePDFGeneration = () => {\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [progress, setProgress] = useState('');\n  const [error, setError] = useState('');\n\n  const generatePDF = async (formData, docType, language = 'turkish') => {\n    try {\n      setIsGenerating(true);\n      setError('');\n      setProgress('PDF üretimi başlatılıyor...');\n\n      // Production PDF üretimi\n      const success = await PDFService.generatePDFWithFallback(formData, docType, language);\n      \n      if (success) {\n        setProgress('PDF başarıyla indirildi!');\n        setTimeout(() => setProgress(''), 3000);\n        return true;\n      } else {\n        throw new Error('PDF üretimi başarısız oldu');\n      }\n\n    } catch (error) {\n      setError(error.message);\n      console.error('PDF generation error:', error);\n      return false;\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const clearMessages = () => {\n    setError('');\n    setProgress('');\n  };\n\n  return {\n    isGenerating,\n    progress,\n    error,\n    generatePDF,\n    clearMessages\n  };\n};\n\nexport default usePDFGeneration;\n"],"mappings":"AAAA;AACA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,UAAU,KAAM,wBAAwB,CAE/C,MAAO,MAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CACpC,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGJ,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACK,QAAQ,CAAEC,WAAW,CAAC,CAAGN,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACO,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAS,WAAW,CAAG,cAAAA,CAAOC,QAAQ,CAAEC,OAAO,CAA2B,IAAzB,CAAAC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,SAAS,CAChE,GAAI,CACFT,eAAe,CAAC,IAAI,CAAC,CACrBI,QAAQ,CAAC,EAAE,CAAC,CACZF,WAAW,CAAC,6BAA6B,CAAC,CAE1C;AACA,KAAM,CAAAU,OAAO,CAAG,KAAM,CAAAf,UAAU,CAACgB,uBAAuB,CAACP,QAAQ,CAAEC,OAAO,CAAEC,QAAQ,CAAC,CAErF,GAAII,OAAO,CAAE,CACXV,WAAW,CAAC,0BAA0B,CAAC,CACvCY,UAAU,CAAC,IAAMZ,WAAW,CAAC,EAAE,CAAC,CAAE,IAAI,CAAC,CACvC,MAAO,KAAI,CACb,CAAC,IAAM,CACL,KAAM,IAAI,CAAAa,KAAK,CAAC,4BAA4B,CAAC,CAC/C,CAEF,CAAE,MAAOZ,KAAK,CAAE,CACdC,QAAQ,CAACD,KAAK,CAACa,OAAO,CAAC,CACvBC,OAAO,CAACd,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,MAAO,MAAK,CACd,CAAC,OAAS,CACRH,eAAe,CAAC,KAAK,CAAC,CACxB,CACF,CAAC,CAED,KAAM,CAAAkB,aAAa,CAAGA,CAAA,GAAM,CAC1Bd,QAAQ,CAAC,EAAE,CAAC,CACZF,WAAW,CAAC,EAAE,CAAC,CACjB,CAAC,CAED,MAAO,CACLH,YAAY,CACZE,QAAQ,CACRE,KAAK,CACLE,WAAW,CACXa,aACF,CAAC,CACH,CAAC,CAED,cAAe,CAAApB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}