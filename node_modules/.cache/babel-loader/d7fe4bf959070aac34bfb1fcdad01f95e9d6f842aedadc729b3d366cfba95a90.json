{"ast":null,"code":"var _jsxFileName = \"/Users/mehmettfaik/Desktop/Frontend/frontend/src/components/DocumentForm.jsx\",\n  _s = $RefreshSig$();\n// src/components/DocumentForm.jsx\nimport React, { useState } from 'react';\nimport { generatePDF } from '../api';\nimport FabricTechnicalForm from './FabricTechnicalForm';\nimport ProformaInvoiceForm from './ProformaInvoiceForm';\nimport InvoiceForm from './InvoiceForm';\nimport PackingListForm from './PackingListForm';\nimport CreditNoteForm from './CreditNoteForm';\nimport DebitNoteForm from './DebitNoteForm';\nimport OrderConfirmationForm from './OrderConfirmationForm';\nimport SiparisForm from './SiparisForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fieldMap = {\n  fiyatTeklif: [{\n    name: 'Müşteri Adı',\n    placeholder: 'Müşteri Adı'\n  }, {\n    name: 'Ürün',\n    placeholder: 'Ürün Adı'\n  }, {\n    name: 'Tutar',\n    placeholder: 'Tutar'\n  }, {\n    name: 'Teslim Süresi',\n    placeholder: 'Teslim Süresi'\n  }]\n};\nconst DocumentForm = ({\n  selectedDocType\n}) => {\n  _s();\n  const [formData, setFormData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fields = fieldMap[selectedDocType] || [];\n\n  // Eğer teknik föy seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'teknikFoy') {\n    return /*#__PURE__*/_jsxDEV(FabricTechnicalForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Eğer proforma invoice seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'proformaInvoice') {\n    return /*#__PURE__*/_jsxDEV(ProformaInvoiceForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Eğer invoice seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'invoice') {\n    return /*#__PURE__*/_jsxDEV(InvoiceForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Eğer packing list seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'packingList') {\n    return /*#__PURE__*/_jsxDEV(PackingListForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Eğer credit note seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'creditNote') {\n    return /*#__PURE__*/_jsxDEV(CreditNoteForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  // Eğer debit note seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'debitNote') {\n    return /*#__PURE__*/_jsxDEV(DebitNoteForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Eğer order confirmation seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'orderConfirmation') {\n    return /*#__PURE__*/_jsxDEV(OrderConfirmationForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Eğer sipariş formu seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'siparis') {\n    return /*#__PURE__*/_jsxDEV(SiparisForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  const handleChange = (e, fieldName) => {\n    setFormData({\n      ...formData,\n      [fieldName]: e.target.value\n    });\n    setError(null); // Yeni input girildiğinde hata mesajını temizle\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      const blob = await generatePDF(selectedDocType, formData);\n\n      // PDF blob'unu doğru MIME type ile oluştur\n      const pdfBlob = new Blob([blob], {\n        type: 'application/pdf'\n      });\n\n      // Blob'un boyutunu kontrol et\n      if (pdfBlob.size === 0) {\n        throw new Error('Received empty PDF file');\n      }\n\n      // URL oluştur ve indir\n      const url = window.URL.createObjectURL(pdfBlob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `${selectedDocType}_${Date.now()}.pdf`);\n      link.style.display = 'none';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url); // URL'i temizle\n\n      // Başarı mesajı\n      console.log('PDF successfully downloaded');\n    } catch (err) {\n      setError(err.message || \"PDF oluşturulurken bir hata oluştu.\");\n      console.error(\"PDF generation error:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!selectedDocType) return null;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"document-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [selectedDocType.toUpperCase(), \" Bilgileri\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      style: {\n        color: 'red',\n        marginBottom: '1rem'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-field\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: field.placeholder,\n        value: formData[field.name] || '',\n        onChange: e => handleChange(e, field.name),\n        required: true,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, field.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      style: {\n        position: 'relative'\n      },\n      children: loading ? 'İşleniyor...' : 'PDF Oluştur'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentForm, \"W0dphcWvYDChrjVfsx0eToGNewA=\");\n_c = DocumentForm;\nexport default DocumentForm;\nvar _c;\n$RefreshReg$(_c, \"DocumentForm\");","map":{"version":3,"names":["React","useState","generatePDF","FabricTechnicalForm","ProformaInvoiceForm","InvoiceForm","PackingListForm","CreditNoteForm","DebitNoteForm","OrderConfirmationForm","SiparisForm","jsxDEV","_jsxDEV","fieldMap","fiyatTeklif","name","placeholder","DocumentForm","selectedDocType","_s","formData","setFormData","loading","setLoading","error","setError","fields","fileName","_jsxFileName","lineNumber","columnNumber","handleChange","e","fieldName","target","value","handleSubmit","preventDefault","blob","pdfBlob","Blob","type","size","Error","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","Date","now","style","display","body","appendChild","click","removeChild","revokeObjectURL","console","log","err","message","onSubmit","className","children","toUpperCase","color","marginBottom","map","field","onChange","required","disabled","position","_c","$RefreshReg$"],"sources":["/Users/mehmettfaik/Desktop/Frontend/frontend/src/components/DocumentForm.jsx"],"sourcesContent":["// src/components/DocumentForm.jsx\nimport React, { useState } from 'react';\nimport { generatePDF } from '../api';\nimport FabricTechnicalForm from './FabricTechnicalForm';\nimport ProformaInvoiceForm from './ProformaInvoiceForm';\nimport InvoiceForm from './InvoiceForm';\nimport PackingListForm from './PackingListForm';\nimport CreditNoteForm from './CreditNoteForm';\nimport DebitNoteForm from './DebitNoteForm';\nimport OrderConfirmationForm from './OrderConfirmationForm';\nimport SiparisForm from './SiparisForm'; \n\nconst fieldMap = {\n  fiyatTeklif: [\n    { name: 'Müşteri Adı', placeholder: 'Müşteri Adı' },\n    { name: 'Ürün', placeholder: 'Ürün Adı' },\n    { name: 'Tutar', placeholder: 'Tutar' },\n    { name: 'Teslim Süresi', placeholder: 'Teslim Süresi' }\n  ]\n};\n\nconst DocumentForm = ({ selectedDocType }) => {\n  const [formData, setFormData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fields = fieldMap[selectedDocType] || [];\n\n  // Eğer teknik föy seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'teknikFoy') {\n    return <FabricTechnicalForm />;\n  }\n\n  // Eğer proforma invoice seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'proformaInvoice') {\n    return <ProformaInvoiceForm />;\n  }\n\n  // Eğer invoice seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'invoice') {\n    return <InvoiceForm />;\n  }\n\n  // Eğer packing list seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'packingList') {\n    return <PackingListForm />;\n  }\n\n  // Eğer credit note seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'creditNote') {\n    return <CreditNoteForm />;\n  }\n  // Eğer debit note seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'debitNote') {\n    return <DebitNoteForm />;\n  }\n\n  // Eğer order confirmation seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'orderConfirmation') {\n    return <OrderConfirmationForm />;\n  }\n\n  // Eğer sipariş formu seçilmişse, özel form komponentini göster\n  if (selectedDocType === 'siparis') {\n    return <SiparisForm />;\n  }\n\n  const handleChange = (e, fieldName) => {\n    setFormData({ ...formData, [fieldName]: e.target.value });\n    setError(null); // Yeni input girildiğinde hata mesajını temizle\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const blob = await generatePDF(selectedDocType, formData);\n      \n      // PDF blob'unu doğru MIME type ile oluştur\n      const pdfBlob = new Blob([blob], { type: 'application/pdf' });\n      \n      // Blob'un boyutunu kontrol et\n      if (pdfBlob.size === 0) {\n        throw new Error('Received empty PDF file');\n      }\n      \n      // URL oluştur ve indir\n      const url = window.URL.createObjectURL(pdfBlob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `${selectedDocType}_${Date.now()}.pdf`);\n      link.style.display = 'none';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url); // URL'i temizle\n      \n      // Başarı mesajı\n      console.log('PDF successfully downloaded');\n    } catch (err) {\n      setError(err.message || \"PDF oluşturulurken bir hata oluştu.\");\n      console.error(\"PDF generation error:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!selectedDocType) return null;\n\n  return (\n    <form onSubmit={handleSubmit} className=\"document-form\">\n      <h3>{selectedDocType.toUpperCase()} Bilgileri</h3>\n      {error && (\n        <div className=\"error-message\" style={{ color: 'red', marginBottom: '1rem' }}>\n          {error}\n        </div>\n      )}\n      {fields.map((field) => (\n        <div key={field.name} className=\"form-field\">\n          <input\n            type=\"text\"\n            placeholder={field.placeholder}\n            value={formData[field.name] || ''}\n            onChange={(e) => handleChange(e, field.name)}\n            required\n            disabled={loading}\n          />\n        </div>\n      ))}\n      <button type=\"submit\" disabled={loading} style={{ position: 'relative' }}>\n        {loading ? 'İşleniyor...' : 'PDF Oluştur'}\n      </button>\n    </form>\n  );\n};\n\nexport default DocumentForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}