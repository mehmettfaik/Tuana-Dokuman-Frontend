{"ast":null,"code":"// Frontend'de API çağrısı\nconst generatePDF = async data => {\n  try {\n    console.log('Sending data to server:', data);\n    const response = await axios.post('http://localhost:5000/api/pdf/generate', data, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      responseType: 'arraybuffer',\n      withCredentials: false\n    });\n    console.log('Response received:', response);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error('PDF Generation Error:', error);\n    if (error.code === 'ERR_NETWORK') {\n      throw new Error('Server is not accessible. Please check if the server is running on port 5000.');\n    }\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to generate PDF');\n  }\n};","map":{"version":3,"names":["generatePDF","data","console","log","response","axios","post","headers","responseType","withCredentials","error","_error$response","_error$response$data","code","Error","message"],"sources":["/Users/mehmettfaik/Desktop/Frontend/frontend/src/api.js"],"sourcesContent":["// Frontend'de API çağrısı\nconst generatePDF = async (data) => {\n  try {\n    console.log('Sending data to server:', data);\n    \n    const response = await axios.post('http://localhost:5000/api/pdf/generate', data, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      responseType: 'arraybuffer',\n      withCredentials: false\n    });\n    \n    console.log('Response received:', response);\n    return response.data;\n  } catch (error) {\n    console.error('PDF Generation Error:', error);\n    \n    if (error.code === 'ERR_NETWORK') {\n      throw new Error('Server is not accessible. Please check if the server is running on port 5000.');\n    }\n    \n    throw new Error(error.response?.data?.message || 'Failed to generate PDF');\n  }\n};"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAG,MAAOC,IAAI,IAAK;EAClC,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,IAAI,CAAC;IAE5C,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,wCAAwC,EAAEL,IAAI,EAAE;MAChFM,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,YAAY,EAAE,aAAa;MAC3BC,eAAe,EAAE;IACnB,CAAC,CAAC;IAEFP,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,QAAQ,CAAC;IAC3C,OAAOA,QAAQ,CAACH,IAAI;EACtB,CAAC,CAAC,OAAOS,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACdV,OAAO,CAACQ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAE7C,IAAIA,KAAK,CAACG,IAAI,KAAK,aAAa,EAAE;MAChC,MAAM,IAAIC,KAAK,CAAC,+EAA+E,CAAC;IAClG;IAEA,MAAM,IAAIA,KAAK,CAAC,EAAAH,eAAA,GAAAD,KAAK,CAACN,QAAQ,cAAAO,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBV,IAAI,cAAAW,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI,wBAAwB,CAAC;EAC5E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}